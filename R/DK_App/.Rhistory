Mat.list <- lapply(sexes, function(sx,LTC2,years,Empty,ages,causes){
LTC    <- mx.COD.cast[mx.COD.cast$Sex == sx,]
Sex.List <- lapply(countries, function(st,LTC,Empty,years,ages,causes){
Mat    <- LTC[LTC$Country == st,]
YRlist <- lapply(years, function(yr,Mat,Empty,causes,ages){
Mat2           <- as.matrix(Mat[Mat$Year == yr,c(causes), with = F])
rownames(Mat2) <- ages
Empty[rownames(Mat2),colnames(Mat2)] <- Mat2
Empty
}, Mat = Mat, Empty = Empty, causes = causes, ages= ages)
names(YRlist) <- years
YRlist
}, LTC = LTC, years=years, Empty = Empty, causes = causes, ages=ages)
names(Sex.List) <- countries
Sex.List
},LTC2 = mx.COD.cast, years=years, Empty = Empty, causes = causes, ages=ages)
names(Mat.list) <- sexes
source('R/Functions_1.R')
library(parallelsugar)
Decomp.results.list   <- list()
country.list          <- list()
sexes
i <'f'
i <-'f'
i
x <- Mat.list[[as.character(i)]]
x
countries2
j <- 'DNK'
y <- x[[as.character(j)]]
y
as.character(j)
library(shiny)
library(ggplot2)
library(data.table)
library(RColorBrewer)
setwd("C:/Users/jmaburto/Documents/GitHub/Lifespan-inequality-Denmark/R/DK_App")
rsconnect::setAccountInfo(name='jmaburto',
token='7310E08D0D081D3C3CABCAA90D18045E',
secret='Vzlie6RN39/THGhWKatGf/C68yZp+RENdTdOl/ey')
load('Results.RData')
runApp()
library(shiny)
library(ggplot2)
library(data.table)
library(RColorBrewer)
setwd("C:/Users/jmaburto/Documents/GitHub/Lifespan-inequality-Denmark/R/DK_App")
rsconnect::setAccountInfo(name='jmaburto',
token='7310E08D0D081D3C3CABCAA90D18045E',
secret='Vzlie6RN39/THGhWKatGf/C68yZp+RENdTdOl/ey')
load('Results.RData')
runApp()
library(shiny)
library(ggplot2)
library(data.table)
library(RColorBrewer)
setwd("C:/Users/jmaburto/Documents/GitHub/Lifespan-inequality-Denmark/R/DK_App")
rsconnect::setAccountInfo(name='jmaburto',
token='7310E08D0D081D3C3CABCAA90D18045E',
secret='Vzlie6RN39/THGhWKatGf/C68yZp+RENdTdOl/ey')
load('Results.RData')
runApp()
runApp()
library(ggplot2)
library(data.table)
library(reshape2)
setwd("C:/Users/jmaburto/Documents/GitHub/Lifespan-inequality-Denmark")
# 1. 'Infectious, non-R',
# 2. 'Cancer AS',
# 3. 'Cancer NAS',
# 4. 'Diabetes',
# 5. 'Cardiovascular',
# 6. 'Respiratory I',
# 7. 'Respiratory NI',
# 8. 'External',
# 9. 'Other'
#
#load data
HMD       <- get(load('Data/HMD_Data.RData'))
Countries <- c('DNK', 'SWE', 'NOR')
Data      <- HMD[HMD$PopName %in% Countries,]
Data$Country.name <- Data$PopName
Data      <- Data[,c(1,12,14,2,3)]
Data      <- Data[Data$Year >= 1960 & Data$Year <= 2014,]
gdata::keep(Data,Countries,sure=T)
COD       <- local(get(load('Data/Single_COD.RData')))
COD       <- COD[COD$Year >= 1960 & COD$Year <= 2014,]
COD$Sex   <- as.character(COD$Sex)
levels(COD$Country.name) <- Countries
COD$Country.name         <- as.character(COD$Country.name)
#get proportions by age
COD  <- COD[, Dx.p:= Dx/sum(Dx), by= list(Country, Country.name, ICD, Year, Sex,Age)]
COD[is.na(Dx.p),]$Dx.p <- 0
COD       <- COD[,c(4,5,2,6,8,9)]
COD.cast <- dcast(COD,Year+Sex+Country.name+Age ~ Cat,value.var = 'Dx.p')
#Merge datsets
mx.COD        <- merge(COD,Data,by = c('Year','Sex','Country.name','Age'), all = T)
mx.COD$mx.COD <- mx.COD$Dx.p * mx.COD$mx
mx.COD        <- mx.COD[order(Country.name, Year, Sex, Cat, Age),]
mx.COD.cast   <- dcast.data.table(mx.COD, Year+Sex+Country.name+Age ~ Cat, value.var = 'mx.COD')
# perform decomposition
sexes     <- unique(mx.COD.cast$Sex)
years     <- unique(mx.COD.cast$Year)
countries <- unique(mx.COD.cast$Country.name)
countries2 <- unique(mx.COD.cast$Country.name)[1:2]
ages      <- sort(unique(mx.COD.cast$Age))
causes    <- colnames(mx.COD.cast)[5:13]
Empty     <- matrix(0,nrow = length(ages),ncol = length(causes),dimnames = list(ages,causes))
# get matrices in lists to do faster the calculation
Mat.list <- lapply(sexes, function(sx,LTC2,years,Empty,ages,causes){
LTC    <- mx.COD.cast[mx.COD.cast$Sex == sx,]
Sex.List <- lapply(countries, function(st,LTC,Empty,years,ages,causes){
Mat    <- LTC[LTC$Country == st,]
YRlist <- lapply(years, function(yr,Mat,Empty,causes,ages){
Mat2           <- as.matrix(Mat[Mat$Year == yr,c(causes), with = F])
rownames(Mat2) <- ages
Empty[rownames(Mat2),colnames(Mat2)] <- Mat2
Empty
}, Mat = Mat, Empty = Empty, causes = causes, ages= ages)
names(YRlist) <- years
YRlist
}, LTC = LTC, years=years, Empty = Empty, causes = causes, ages=ages)
names(Sex.List) <- countries
Sex.List
},LTC2 = mx.COD.cast, years=years, Empty = Empty, causes = causes, ages=ages)
names(Mat.list) <- sexes
source('R/Functions_1.R')
years
i <-'f'
j <- 'DNK'
years <- 2014
library(parallelsugar)
print(i)
x <- Mat.list[[as.character(i)]]
print(j)
y <- x[[as.character(j)]]
z <- x[['SWE']]
Decomp.list <- mclapply(years,function(yr,y,z,e0frommxc,i){
contrib           <- Decomp(func = e0frommxc,
rates1 = c(y[[as.character(yr)]]),
rates2 = c(z[[as.character(yr)]]),N = 50,sex = i)
dim(contrib)      <- dim(y[[as.character(yr)]])
dimnames(contrib) <- dimnames(y[[as.character(yr)]])
contrib },y= y,z=z,e0frommxc = e0frommxc, i = i, mc.cores = 4)
Decomp.list
Decomp.list[[1]]
Decomp.list[[1]]
sum(Decomp.list[[1]])
Decomp.list <- mclapply(years,function(yr,y,z,cvfrommxc,i){
contrib           <- Decomp(func = cvfrommxc,
rates1 = c(y[[as.character(yr)]]),
rates2 = c(z[[as.character(yr)]]),N = 50,sex = i)
dim(contrib)      <- dim(y[[as.character(yr)]])
dimnames(contrib) <- dimnames(y[[as.character(yr)]])
contrib },y= y,z=z,cvfrommxc = cvfrommxc, i = i, mc.cores = 4)
sum(Decomp.list[[1]])
library(ggplot2)
library(data.table)
library(reshape2)
setwd("C:/Users/jmaburto/Documents/GitHub/Lifespan-inequality-Denmark")
# 1. 'Infectious, non-R',
# 2. 'Cancer AS',
# 3. 'Cancer NAS',
# 4. 'Diabetes',
# 5. 'Cardiovascular',
# 6. 'Respiratory I',
# 7. 'Respiratory NI',
# 8. 'External',
# 9. 'Other'
#
#load data
HMD       <- get(load('Data/HMD_Data.RData'))
Countries <- c('DNK', 'SWE', 'NOR')
Data      <- HMD[HMD$PopName %in% Countries,]
Data$Country.name <- Data$PopName
Data      <- Data[,c(1,12,14,2,3)]
Data      <- Data[Data$Year >= 1960 & Data$Year <= 2014,]
gdata::keep(Data,Countries,sure=T)
COD       <- local(get(load('Data/Single_COD.RData')))
COD       <- COD[COD$Year >= 1960 & COD$Year <= 2014,]
COD$Sex   <- as.character(COD$Sex)
levels(COD$Country.name) <- Countries
COD$Country.name         <- as.character(COD$Country.name)
#get proportions by age
COD  <- COD[, Dx.p:= Dx/sum(Dx), by= list(Country, Country.name, ICD, Year, Sex,Age)]
COD[is.na(Dx.p),]$Dx.p <- 0
COD       <- COD[,c(4,5,2,6,8,9)]
COD.cast <- dcast(COD,Year+Sex+Country.name+Age ~ Cat,value.var = 'Dx.p')
#Merge datsets
mx.COD        <- merge(COD,Data,by = c('Year','Sex','Country.name','Age'), all = T)
mx.COD$mx.COD <- mx.COD$Dx.p * mx.COD$mx
mx.COD        <- mx.COD[order(Country.name, Year, Sex, Cat, Age),]
mx.COD.cast   <- dcast.data.table(mx.COD, Year+Sex+Country.name+Age ~ Cat, value.var = 'mx.COD')
# perform decomposition
sexes     <- unique(mx.COD.cast$Sex)
years     <- unique(mx.COD.cast$Year)
countries <- unique(mx.COD.cast$Country.name)
countries2 <- unique(mx.COD.cast$Country.name)[1:2]
ages      <- sort(unique(mx.COD.cast$Age))
causes    <- colnames(mx.COD.cast)[5:13]
Empty     <- matrix(0,nrow = length(ages),ncol = length(causes),dimnames = list(ages,causes))
# get matrices in lists to do faster the calculation
Mat.list <- lapply(sexes, function(sx,LTC2,years,Empty,ages,causes){
LTC    <- mx.COD.cast[mx.COD.cast$Sex == sx,]
Sex.List <- lapply(countries, function(st,LTC,Empty,years,ages,causes){
Mat    <- LTC[LTC$Country == st,]
YRlist <- lapply(years, function(yr,Mat,Empty,causes,ages){
Mat2           <- as.matrix(Mat[Mat$Year == yr,c(causes), with = F])
rownames(Mat2) <- ages
Empty[rownames(Mat2),colnames(Mat2)] <- Mat2
Empty
}, Mat = Mat, Empty = Empty, causes = causes, ages= ages)
names(YRlist) <- years
YRlist
}, LTC = LTC, years=years, Empty = Empty, causes = causes, ages=ages)
names(Sex.List) <- countries
Sex.List
},LTC2 = mx.COD.cast, years=years, Empty = Empty, causes = causes, ages=ages)
names(Mat.list) <- sexes
source('R/Functions_1.R')
library(parallelsugar)
Decomp.results.cv <- list()
country.list          <- list()
for (i in sexes){
print(i)
x <- Mat.list[[as.character(i)]]
for (j in countries2){
print(j)
y <- x[[as.character(j)]]
Decomp.list <- mclapply(years,function(yr,y,z,cvfrommxc,i){
contrib           <- Decomp(func = cvfrommxc,
rates1 = c(y[[as.character(yr)]]),
rates2 = c(z[[as.character(yr)]]),N = 50,sex = i)
dim(contrib)      <- dim(y[[as.character(yr)]])
dimnames(contrib) <- dimnames(y[[as.character(yr)]])
contrib },y= y,z=z,cvfrommxc = cvfrommxc, i = i, mc.cores = 4)
names(Decomp.list)  <- years
country.list[[as.character(j)]] <- Decomp.list
}
Decomp.results.cv[[as.character(i)]]  <- country.list
}
save(Decomp.results.cv, file =  'Data/Compare_DecompResults_cv_List.RData')
gc()
Decomp.results.cv <- list()
country.list          <- list()
for (i in sexes){
print(i)
x <- Mat.list[[as.character(i)]]
for (j in countries2){
print(j)
y <- x[[as.character(j)]]
z <- x[['SWE']]
Decomp.list <- mclapply(years,function(yr,y,z,cvfrommxc,i){
contrib           <- Decomp(func = cvfrommxc,
rates1 = c(y[[as.character(yr)]]),
rates2 = c(z[[as.character(yr)]]),N = 50,sex = i)
dim(contrib)      <- dim(y[[as.character(yr)]])
dimnames(contrib) <- dimnames(y[[as.character(yr)]])
contrib },y= y,z=z,cvfrommxc = cvfrommxc, i = i, mc.cores = 4)
names(Decomp.list)  <- years
country.list[[as.character(j)]] <- Decomp.list
}
Decomp.results.cv[[as.character(i)]]  <- country.list
}
save(Decomp.results.cv, file =  'Data/Compare_DecompResults_cv_List.RData')
gc()
library(ggplot2)
library(data.table)
library(reshape2)
setwd("C:/Users/jmaburto/Documents/GitHub/Lifespan-inequality-Denmark")
# 1. 'Infectious, non-R',
# 2. 'Cancer AS',
# 3. 'Cancer NAS',
# 4. 'Diabetes',
# 5. 'Cardiovascular',
# 6. 'Respiratory I',
# 7. 'Respiratory NI',
# 8. 'External',
# 9. 'Other'
Decomp.ex <- local(get(load("Data/DecompResults_ex_List.RData")))
Decomp.cv <- local(get(load("Data/DecompResults_cv_List.RData")))
Compare.ex <- local(get(load("Data/Compare_DecompResults_ex_List.RData")))
Compare.cv <- local(get(load("Data/Compare_DecompResults_cv_List.RData")))
source('R/Functions_1.R')
#get results for decomp in ex un a data.table
DT.Decomp.ex <- do.call(rbind,lapply(1:2,function(j,y){
x <- y[[j]]
names(x) <- 1:3
#"DNK" "NOR" "SWE"
w <- do.call(rbind,
lapply(names(x),
FUN = my_reshape.function,
DecompIn = x))
W <- cbind(sex = as.integer(j),w)
W
},
y=Decomp.ex))
#warnings()
#get results for decomp in ed un a data.table
DT.Decomp.cv <- do.call(rbind,lapply(1:2,function(j,y){
x <- y[[j]]
names(x) <- 1:3
#"DNK" "NOR" "SWE"
w <- do.call(rbind,
lapply(names(x),
FUN = my_reshape.function,
DecompIn = x))
W <- cbind(sex = as.integer(j),w)
W
},
y=Decomp.cv))
#warnings()
DT.compare.ex <- do.call(rbind,lapply(1:2,function(j,y){
x <- y[[j]]
names(x) <- 1:2
#"DNK" "NOR" "SWE"
w <- do.call(rbind,
lapply(names(x),
FUN = my_reshape.function,
DecompIn = x))
W <- cbind(sex = as.integer(j),w)
W
},
y=Compare.ex))
DT.compare.cv <- do.call(rbind,lapply(1:2,function(j,y){
x <- y[[j]]
names(x) <- 1:2
#"DNK" "NOR" "SWE"
w <- do.call(rbind,
lapply(names(x),
FUN = my_reshape.function,
DecompIn = x))
W <- cbind(sex = as.integer(j),w)
W
},
y=Compare.cv))
#DT       <- as.data.table(melt(D,
#                               id.vars = list("state","year","age"),
#                               variable.name = "Cause"))
source('R/5_LifeExpectancy&LifespanInequality.R')
gdata::keep(DT.Decomp.ex,DT.Decomp.cv,Data,DT.compare.cv,DT.compare.ex,sure = T)
source('R/Functions_1.R')
Data$Country <- as.factor(Data$PopName)
levels(Data$Country) <- c('Denmark', 'Norway', 'Sweden')
names(DT.Decomp.cv) <- c('Sex','Country','Year','Age',Category.labels)
names(DT.Decomp.ex) <- c('Sex','Country','Year','Age',Category.labels)
names(DT.compare.cv) <- c('Sex','Country','Year','Age',Category.labels)
names(DT.compare.ex) <- c('Sex','Country','Year','Age',Category.labels)
DT.Decomp.ex <- melt(DT.Decomp.ex,id.vars = c('Sex','Country','Year','Age'),value.name = 'Contribution',variable.name = 'Cause')
DT.Decomp.cv <- melt(DT.Decomp.cv,id.vars = c('Sex','Country','Year','Age'),value.name = 'Contribution',variable.name = 'Cause')
DT.compare.ex <- melt(DT.compare.ex,id.vars = c('Sex','Country','Year','Age'),value.name = 'Contribution',variable.name = 'Cause')
DT.compare.cv <- melt(DT.compare.cv,id.vars = c('Sex','Country','Year','Age'),value.name = 'Contribution',variable.name = 'Cause')
DT.compare.ex$Country <- as.factor(DT.compare.ex$Country)
DT.compare.cv$Country <- as.factor(DT.compare.cv$Country)
levels(DT.compare.ex$Country) <- c('Denmark', 'Norway')
levels(DT.compare.cv$Country) <- c('Denmark', 'Norway')
DT.Decomp.ex$Country <- as.factor(DT.Decomp.ex$Country)
DT.Decomp.cv$Country <- as.factor(DT.Decomp.cv$Country)
levels(DT.Decomp.ex$Country) <- c('Denmark', 'Norway', 'Sweden')
levels(DT.Decomp.cv$Country) <- c('Denmark', 'Norway', 'Sweden')
DT.Decomp.ex$Sex <- as.factor(DT.Decomp.ex$Sex)
DT.Decomp.cv$Sex <- as.factor(DT.Decomp.cv$Sex)
levels(DT.Decomp.ex$Sex) <- c('Female', 'Male')
levels(DT.Decomp.cv$Sex) <- c('Female', 'Male')
DT.compare.ex$Sex <- as.factor(DT.compare.ex$Sex)
DT.compare.cv$Sex <- as.factor(DT.compare.cv$Sex)
levels(DT.compare.ex$Sex) <- c('Female', 'Male')
levels(DT.compare.cv$Sex) <- c('Female', 'Male')
single.ex <- DT.Decomp.ex
single.cv <- DT.Decomp.cv
Labels.age            <- c('0-4', '5-9', '10-14', '15-19', '20-24','25-29','30-34','35-39',
'40-44','45-49','50-54','55-59','60-64','65-69',
"70-74","75-79","80-84","85-89","90-94","95-99","100-104","105-109",'110+')
DT.Decomp.ex$Age2       <- (cut(DT.Decomp.ex$Age+1, breaks=c(seq(0,110,5),Inf),labels=Labels.age))
DT.Decomp.cv$Age2       <- (cut(DT.Decomp.cv$Age+1, breaks=c(seq(0,110,5),Inf),labels=Labels.age))
DT.Decomp.ex            <- DT.Decomp.ex[,list(Contribution = sum(Contribution)), by = list(Sex,Country,Year,Cause,Age2)]
DT.Decomp.cv            <- DT.Decomp.cv[,list(Contribution = sum(Contribution)), by = list(Sex,Country,Year,Cause,Age2)]
names(DT.Decomp.ex)     <- c("Sex","Country","Year","Cause","Age" ,"Contribution")
names(DT.Decomp.cv)     <- c("Sex","Country","Year","Cause","Age" ,"Contribution")
DT.compare.ex$Age2       <- (cut(DT.compare.ex$Age+1, breaks=c(seq(0,110,5),Inf),labels=Labels.age))
DT.compare.cv$Age2       <- (cut(DT.compare.cv$Age+1, breaks=c(seq(0,110,5),Inf),labels=Labels.age))
DT.compare.ex            <- DT.compare.ex[,list(Contribution = sum(Contribution)), by = list(Sex,Country,Year,Cause,Age2)]
DT.compare.cv            <- DT.compare.cv[,list(Contribution = sum(Contribution)), by = list(Sex,Country,Year,Cause,Age2)]
names(DT.compare.ex)     <- c("Sex","Country","Year","Cause","Age" ,"Contribution")
names(DT.compare.cv)     <- c("Sex","Country","Year","Cause","Age" ,"Contribution")
save(Data,DT.Decomp.cv, DT.Decomp.ex,DT.compare.cv,DT.compare.ex, file='Data/Results.RData')
save(Data,DT.Decomp.cv, DT.Decomp.ex,single.ex,single.cv,DT.compare.cv,DT.compare.ex, file='R/DK_App/Results.RData')
library(shiny)
library(ggplot2)
library(data.table)
library(RColorBrewer)
setwd("C:/Users/jmaburto/Documents/GitHub/Lifespan-inequality-Denmark/R/DK_App")
rsconnect::setAccountInfo(name='jmaburto',
token='7310E08D0D081D3C3CABCAA90D18045E',
secret='Vzlie6RN39/THGhWKatGf/C68yZp+RENdTdOl/ey')
load('Results.RData')
runApp()
runApp()
runApp()
runApp()
source('Decomp_Shiny_app.R')
runApp()
state.ind   <- 'Denmark'
runApp()
state.ind
Data1      <- Data
DT.info   <- Data1[Data2$Country %in% c(state.ind,'Sweden') & Data2$Year %in% years & Data2$Age==0,]
DT.info   <- Data1[Data1$Country %in% c(state.ind,'Sweden') & Data1$Year %in% years & Data2$Age==0,]
years <- 2014
DT.info   <- Data1[Data1$Country %in% c(state.ind,'Sweden') & Data1$Year %in% years & Data2$Age==0,]
DT.info   <- Data1[Data1$Country %in% c(state.ind,'Sweden') & Data1$Year %in% years & Data1$Age==0,]
DT.info
DT.out   <- DT.info[,c(ex,cv,Sex2,Country)]
DT.out
DT.info
DT.info[DT.info$PopName == state.ind,]
DT.info[DT.info$Country == state.ind,]
DT.info[DT.info$Country == 'Sweden',]$ex
DT.info[DT.info$Country == 'Sweden',]
DT.info[DT.info$Country == state.ind,]$ex - DT.info[DT.info$Country == 'Sweden',]$ex
dif.e0 <- -DT.info[DT.info$Country == state.ind,]$ex + DT.info[DT.info$Country == 'Sweden',]$ex
dif.e0
dif.cv <- -DT.info[DT.info$Country == state.ind,]$cv + DT.info[DT.info$Country == 'Sweden',]$cv
dif.cv
dif.cv <- round(dif.cv,4)
dif.cv
DT.info[DT.info$Country == state.ind,]
dif.e0 <- -DT.info[DT.info$Country == state.ind,]$ex + DT.info[DT.info$Country == 'Sweden',]$ex
dif.cv <- -DT.info[DT.info$Country == state.ind,]$cv + DT.info[DT.info$Country == 'Sweden',]$cv
dif.cv <- round(dif.cv,4)
dif.cv
dif.e0
sexes  <- c('Females', 'Males')
rbind(sexes,dif.e0,dif.cv)
dif.e0 <- round(dif.cv,2)
rbind(sexes,dif.e0,dif.cv)
dif.e0 <- -DT.info[DT.info$Country == state.ind,]$ex + DT.info[DT.info$Country == 'Sweden',]$ex
dif.cv <- -DT.info[DT.info$Country == state.ind,]$cv + DT.info[DT.info$Country == 'Sweden',]$cv
dif.cv <- round(dif.cv,4)
dif.e0 <- round(dif.cv,2)
dif.e0
dif.e0 <- round(dif.e0,2)
sexes  <- c('Females', 'Males')
rbind(sexes,dif.e0,dif.cv)
dif.e0 <- -DT.info[DT.info$Country == state.ind,]$ex + DT.info[DT.info$Country == 'Sweden',]$ex
dif.cv <- -DT.info[DT.info$Country == state.ind,]$cv + DT.info[DT.info$Country == 'Sweden',]$cv
dif.cv <- round(dif.cv,4)
dif.e0 <- round(dif.e0,2)
dif.e0
sexes  <- c('Females', 'Males')
rbind(sexes,dif.e0,dif.cv)
DT.out <- rbind(sexes,dif.e0,dif.cv)
DT.out
datatable(DT.out, options = list(paging=FALSE,ordering=T, dom = 't'),rownames = F,caption = 'Males')
datatable(DT.out, options = list(paging=FALSE,ordering=T, dom = 't'),rownames = F,caption = 'Difference with Sweden')
label3 <- c('', 'Life expectancy','cv' )
DT.out <- cbind(label3,DT.out)
datatable(DT.out, options = list(paging=FALSE,ordering=T, dom = 't'),rownames = F,caption = 'Difference with Sweden')
colnames(DT.out) <- NULL
datatable(DT.out, options = list(paging=FALSE,ordering=T, dom = 't'),rownames = F,caption = 'Difference with Sweden')
colnames(DT.out) <- C('','','')
colnames(DT.out) <- C(' ',' ',' ')
colnames(DT.out) <- C('',' ','  ')
colnames(DT.out)
DT.out   <- DT.info[,c(ex,cv,Sex2,Country)]
label3 <- c('', 'Life expectancy','cv' )
DT.out <- cbind(label3,DT.out)
DT.out
DT.info   <- Data1[Data1$Country %in% c(state.ind,'Sweden') & Data1$Year %in% years & Data1$Age==0,]
dif.e0 <- -DT.info[DT.info$Country == state.ind,]$ex + DT.info[DT.info$Country == 'Sweden',]$ex
dif.cv <- -DT.info[DT.info$Country == state.ind,]$cv + DT.info[DT.info$Country == 'Sweden',]$cv
dif.cv <- round(dif.cv,4)
dif.e0 <- round(dif.e0,2)
sexes  <- c('Females', 'Males')
DT.out <- rbind(sexes,dif.e0,dif.cv)
DT.out   <- DT.info[,c(ex,cv,Sex2,Country)]
DT.out
label3 <- c('', 'Life expectancy','cv' )
DT.out <- cbind(label3,DT.out)
Data1      <- Data
Data1
DT.info   <- Data1[Data1$Country %in% c(state.ind,'Sweden') & Data1$Year %in% years & Data1$Age==0,]
DT.info
dif.e0 <- -DT.info[DT.info$Country == state.ind,]$ex + DT.info[DT.info$Country == 'Sweden',]$ex
dif.e0
dif.cv <- -DT.info[DT.info$Country == state.ind,]$cv + DT.info[DT.info$Country == 'Sweden',]$cv
dif.cv
dif.cv <- round(dif.cv,4)
dif.cv
dif.e0 <- round(dif.e0,2)
dif.e0
sexes  <- c('Females', 'Males')
sexes
DT.out <- rbind(sexes,dif.e0,dif.cv)
DT.out
label3 <- c('', 'Life expectancy','cv' )
DT.out <- cbind(label3,DT.out)
colnames(DT.out)
colnames(DT.out) <- C('',' ','  ')
colnames(DT.out
colnames(DT.out)
colnames(DT.out)
colnames(DT.out) <-NULL
colnames(DT.out)
datatable(DT.out, options = list(paging=FALSE,ordering=T, dom = 't'),rownames = F,caption = 'Difference with Sweden')
runApp()
DT.out
colnames(DT.out) <- c('Indicator', 'Sex','' )
datatable(DT.out, options = list(paging=FALSE,ordering=T, dom = 't'),rownames = F,caption = 'Difference with Sweden')
colnames(DT.out) <- c('Indicator', 'Sex',' ' )
datatable(DT.out, options = list(paging=FALSE,ordering=T, dom = 't'),rownames = F,caption = 'Difference with Sweden')
runApp()
