Country.name.vec <- toupper(c('Cuba','Dominican Republic','Jamaica','Puerto Rico',
'Trinidad and Tobago','Costa Rica','El Salvador','Guatemala',
'Honduras','Mexico','Nicaragua','Panama','Argentina',
'Chile','Colombia','Ecuador','Paraguay','Peru','Uruguay','Venezuela',
'Haiti','Bolivia','Brazil', 'Latin America'))
# Create a vector with the countries' codes according to WHO
Country.code.vec <- c(2150,2170,2290,2380,2440,2140,2190,2250,2280,2310,
2340,2350,2020,2120,2130,2180,2360,2370,2460,2470,2270,2060,2070,9999)
names(Country.code.vec) <- Country.name.vec
Country.code.vec
Country.name.vec <- toupper(c('Cuba','Dominican Republic','Jamaica','Puerto Rico',
'Trinidad and Tobago','Costa Rica','El Salvador','Guatemala',
'Honduras','Mexico','Nicaragua','Panama','Argentina',
'Chile','Colombia','Ecuador','Paraguay','Peru','Uruguay','Venezuela',
'Haiti','Bolivia','Brazil', 'Latin America'))
# Create a vector with the countries' codes according to WHO
Country.code.vec <- c(2150,2170,2290,2380,2440,2140,2190,2250,2280,2310,
2340,2350,2020,2120,2130,2180,2360,2370,2460,2470,2270,2060,2070,9999)
names(Country.code.vec) <- Country.name.vec
Country.code.vec
# Create a vector with the countries we are interested in
Country.name.vec <- toupper(c('Cuba','Dominican Republic','Jamaica','Puerto Rico',
'Trinidad and Tobago','Costa Rica','El Salvador','Guatemala',
'Honduras','Mexico','Nicaragua','Panama','Argentina',
'Chile','Colombia','Ecuador','Paraguay','Peru','Uruguay','Venezuela',
'Haiti','Bolivia','Brazil', 'Latin America'))
# Create a vector with the countries' codes according to WHO
Country.code.vec <- c(2150,2170,2290,2380,2440,2140,2190,2250,2280,2310,
2340,2350,2020,2120,2130,2180,2360,2370,2460,2470,2270,2060,2070,9999)
names(Country.code.vec) <- Country.name.vec
Country.code.vec
# Create a vector with the countries we are interested in
Country.name.vec <- toupper(c('Cuba','Dominican Republic','Jamaica','Puerto Rico',
'Trinidad and Tobago','Costa Rica','El Salvador','Guatemala',
'Honduras','Mexico','Nicaragua','Panama','Argentina',
'Chile','Colombia','Ecuador','Paraguay','Peru','Uruguay','Venezuela',
'Haiti','Bolivia','Brazil', 'Latin America'))
# Create a vector with the countries' codes according to WHO
Country.code.vec <- c(2150,2170,2290,2380,2440,2140,2190,2250,2280,2310,
2340,2350,2020,2120,2130,2180,2360,2370,2460,2470,2270,2060,2070,9999)
names(Country.code.vec) <- Country.name.vec
Country.code.vec
qpois(p = .5,lambda = .7)
sidebarPanel
library(shiny)
library(data.table)
library(DT)
names.c <- toupper(c('Dominican Republic', 'Costa Rica','El Salvador', 'Guatemala','Mexico', 'Nicaragua',
'Argentina', 'Chile', 'Colombia', 'Ecuador', 'Paraguay',
'Peru', 'Uruguay', 'Venezuela', 'Brazil', 'Cuba','Honduras','Panama','Jamaica'))
Sources <- c('CEPAL2004','CEPAL2010','UN')
Periods <- c("1990-1995", "1995-2000" ,"2000-2005" ,"2005-2010")
sidebarPanel
load('Decomp_results.RData')
setwd("C:/Users/jmaburto/Documents/GitHub/CoD-burden-on-LA/R/Decomp2_App/")
library(shiny)
library(ggplot2)
#rsconnect::setAccountInfo(name='jmaburto',
#                          token='7310E08D0D081D3C3CABCAA90D18045E',
#                          secret='Vzlie6RN39/THGhWKatGf/C68yZp+RENdTdOl/ey')
rsconnect::setAccountInfo(name='wb-lac',
token='06E52479A00F914E6EE44A17FFEA7E80',
secret='D7wg0N0miuHwY8reIRkCRy38E+TSCGXy+nHgm+KH')
load('Decomp_results.RData')
library(ggplot2)
library(data.table)
load('Decomp_results.RData')
setwd("C:/Users/jmaburto/Documents/GitHub/CoD-burden-on-LA/R/Decomp2_App/")
exit
library(plotly)
shiny::runApp('GitHub/CoD-burden-on-LA/R/ex_App')
runApp('GitHub/CoD-burden-on-LA/R/ex_App')
runApp('GitHub/CoD-burden-on-LA/R/ex_App')
runApp('GitHub/CoD-burden-on-LA/R/ex_App')
runApp('GitHub/CoD-burden-on-LA/R/ex_App')
devtools::install_github("mpascariu/MortalityLaws")
devtools::install_github("mpascariu/MortalityLaws")
library(MortalityLaws)
availableHMD()
getwd()
library(data.table)
library(reshape2)
Your_working_directory <- 'C:/Users/jmaburto/Desktop/Lenart_etal_Supercentenarians_2018/'
setwd(Your_working_directory)
#load data files (reference data 25/09/2017 03:08pm)
# source : http://www.grg.org/SC/SCindex.html
# date format: mm dd yyy
#Validated Living Supercentenarians
Living_SC <- read.csv2(file = 'Data/Validated_Living_Supercentenarians_250917.csv', header = T, colClasses = 'character')
#Validated Deceased Supercentenarians (recent deaths 2008 to present)
Deceased_SC <- read.csv2(file = 'Data/Validated_Deceased_Supercentenarians250917.csv', header = T, colClasses = 'character')
# Table A: VERIFIED SUPERCENTENARIANS (listed chronologically by birth date)* New update as of January 1, 2015
# Source: http://www.grg.org/SC/SCindex.html
Table_A <- read.csv2(file = 'Data/Table_A_Verified_Supercentenarians_010115.csv', header = T, colClasses = 'character')
#### No get comparable datasets and the fill the gaps
names.var        <- c('Name','Birthplace','Born','Died')
DT.Deceased      <- data.table(Deceased_SC[,names.var])
DT.Alive         <- data.table(Living_SC[,names.var])
DT.TableA        <- data.table(Table_A[,c('Name..generally.known.as.',names.var[-1])])
names(DT.TableA) <- names.var
Living_SC[,names.var]
library(data.table)
library(reshape2)
Your_working_directory <- 'C:/Users/jmaburto/Desktop/Lenart_etal_Supercentenarians_2018/'
setwd(Your_working_directory)
#load data files (reference data 25/09/2017 03:08pm)
# source : http://www.grg.org/SC/SCindex.html
# date format: mm dd yyy
#Validated Living Supercentenarians
Living_SC <- read.csv2(file = 'Data/Validated_Living_Supercentenarians_250917.csv', header = T, colClasses = 'character')
#Validated Deceased Supercentenarians (recent deaths 2008 to present)
Deceased_SC <- read.csv2(file = 'Data/Validated_Deceased_Supercentenarians250917.csv', header = T, colClasses = 'character')
# Table A: VERIFIED SUPERCENTENARIANS (listed chronologically by birth date)* New update as of January 1, 2015
# Source: http://www.grg.org/SC/SCindex.html
Table_A <- read.csv2(file = 'Data/Table_A_Verified_Supercentenarians_010115.csv', header = T, colClasses = 'character')
#### No get comparable datasets and the fill the gaps
names.var        <- c('Name','Birthplace','Born','Died')
DT.Deceased      <- data.table(Deceased_SC[,names.var])
DT.Alive         <- data.table(Living_SC[,names.var[-4]])
DT.TableA        <- data.table(Table_A[,c('Name..generally.known.as.',names.var[-1])])
names(DT.TableA) <- names.var
gdata::keep(DT.Deceased,DT.Alive,DT.TableA,sure=T)
library(shiny)
library(ggplot2)
library(data.table)
library(RColorBrewer)
setwd("C:/Users/jmaburto/Documents/GitHub/Lifespan-inequality-Denmark/R/DK_App")
rsconnect::setAccountInfo(name='jmaburto',
token='7310E08D0D081D3C3CABCAA90D18045E',
secret='Vzlie6RN39/THGhWKatGf/C68yZp+RENdTdOl/ey')
load('Results.RData')
source('Decomp_Shiny_app.R')
#rm(list=ls(all=TRUE))
library(data.table)
library(reshape2)
library(ggplot2)
setwd("C:/Users/jmaburto/Documents/GitHub/Lifespan-inequality-Denmark")
HMD <- get(load('Data/HMD_Data.RData'))
library(ggplot2)
library(data.table)
library(reshape2)
setwd("C:/Users/jmaburto/Documents/GitHub/Lifespan-inequality-Denmark")
# 1. 'Infectious, non-R',
# 2. 'Cancer AS',
# 3. 'Cancer NAS',
# 4. 'Diabetes',
# 5. 'Cardiovascular',
# 6. 'Respiratory I',
# 7. 'Respiratory NI',
# 8. 'External',
# 9. 'Other'
Decomp.ex <- local(get(load("Data/DecompResults_ex_List.RData")))
Decomp.cv <- local(get(load("Data/DecompResults_cv_List.RData")))
Compare.ex <- local(get(load("Data/Compare_DecompResults_ex_List.RData")))
Compare.cv <- local(get(load("Data/Compare_DecompResults_cv_List.RData")))
source('R/Functions_1.R')
#get results for decomp in ex un a data.table
DT.Decomp.ex <- do.call(rbind,lapply(1:2,function(j,y){
x <- y[[j]]
names(x) <- 1:3
#"DNK" "NOR" "SWE"
w <- do.call(rbind,
lapply(names(x),
FUN = my_reshape.function,
DecompIn = x))
W <- cbind(sex = as.integer(j),w)
W
},
y=Decomp.ex))
#warnings()
#get results for decomp in ed un a data.table
DT.Decomp.cv <- do.call(rbind,lapply(1:2,function(j,y){
x <- y[[j]]
names(x) <- 1:3
#"DNK" "NOR" "SWE"
w <- do.call(rbind,
lapply(names(x),
FUN = my_reshape.function,
DecompIn = x))
W <- cbind(sex = as.integer(j),w)
W
},
y=Decomp.cv))
#warnings()
DT.compare.ex <- do.call(rbind,lapply(1:2,function(j,y){
x <- y[[j]]
names(x) <- 1:2
#"DNK" "NOR" "SWE"
w <- do.call(rbind,
lapply(names(x),
FUN = my_reshape.function,
DecompIn = x))
W <- cbind(sex = as.integer(j),w)
W
},
y=Compare.ex))
DT.compare.cv <- do.call(rbind,lapply(1:2,function(j,y){
x <- y[[j]]
names(x) <- 1:2
#"DNK" "NOR" "SWE"
w <- do.call(rbind,
lapply(names(x),
FUN = my_reshape.function,
DecompIn = x))
W <- cbind(sex = as.integer(j),w)
W
},
y=Compare.cv))
#DT       <- as.data.table(melt(D,
#                               id.vars = list("state","year","age"),
#                               variable.name = "Cause"))
source('R/5_LifeExpectancy&LifespanInequality.R')
gdata::keep(DT.Decomp.ex,DT.Decomp.cv,Data,DT.compare.cv,DT.compare.ex,sure = T)
source('R/Functions_1.R')
Data$Country <- as.factor(Data$PopName)
levels(Data$Country) <- c('Denmark', 'Norway', 'Sweden')
names(DT.Decomp.cv) <- c('Sex','Country','Year','Age',Category.labels)
names(DT.Decomp.ex) <- c('Sex','Country','Year','Age',Category.labels)
names(DT.compare.cv) <- c('Sex','Country','Year','Age',Category.labels)
names(DT.compare.ex) <- c('Sex','Country','Year','Age',Category.labels)
DT.Decomp.ex <- melt(DT.Decomp.ex,id.vars = c('Sex','Country','Year','Age'),value.name = 'Contribution',variable.name = 'Cause')
DT.Decomp.cv <- melt(DT.Decomp.cv,id.vars = c('Sex','Country','Year','Age'),value.name = 'Contribution',variable.name = 'Cause')
DT.compare.ex <- melt(DT.compare.ex,id.vars = c('Sex','Country','Year','Age'),value.name = 'Contribution',variable.name = 'Cause')
DT.compare.cv <- melt(DT.compare.cv,id.vars = c('Sex','Country','Year','Age'),value.name = 'Contribution',variable.name = 'Cause')
DT.compare.ex$Country <- as.factor(DT.compare.ex$Country)
DT.compare.cv$Country <- as.factor(DT.compare.cv$Country)
levels(DT.compare.ex$Country) <- c('Denmark', 'Norway')
levels(DT.compare.cv$Country) <- c('Denmark', 'Norway')
DT.Decomp.ex$Country <- as.factor(DT.Decomp.ex$Country)
DT.Decomp.cv$Country <- as.factor(DT.Decomp.cv$Country)
levels(DT.Decomp.ex$Country) <- c('Denmark', 'Norway', 'Sweden')
levels(DT.Decomp.cv$Country) <- c('Denmark', 'Norway', 'Sweden')
DT.Decomp.ex$Sex <- as.factor(DT.Decomp.ex$Sex)
DT.Decomp.cv$Sex <- as.factor(DT.Decomp.cv$Sex)
levels(DT.Decomp.ex$Sex) <- c('Female', 'Male')
levels(DT.Decomp.cv$Sex) <- c('Female', 'Male')
DT.compare.ex$Sex <- as.factor(DT.compare.ex$Sex)
DT.compare.cv$Sex <- as.factor(DT.compare.cv$Sex)
levels(DT.compare.ex$Sex) <- c('Female', 'Male')
levels(DT.compare.cv$Sex) <- c('Female', 'Male')
single.ex <- DT.Decomp.ex
single.cv <- DT.Decomp.cv
Labels.age            <- c('0-4', '5-9', '10-14', '15-19', '20-24','25-29','30-34','35-39',
'40-44','45-49','50-54','55-59','60-64','65-69',
"70-74","75-79","80-84","85-89","90-94","95-99","100-104","105-109",'110+')
DT.Decomp.ex$Age2       <- (cut(DT.Decomp.ex$Age+1, breaks=c(seq(0,110,5),Inf),labels=Labels.age))
DT.Decomp.cv$Age2       <- (cut(DT.Decomp.cv$Age+1, breaks=c(seq(0,110,5),Inf),labels=Labels.age))
DT.Decomp.ex            <- DT.Decomp.ex[,list(Contribution = sum(Contribution)), by = list(Sex,Country,Year,Cause,Age2)]
DT.Decomp.cv            <- DT.Decomp.cv[,list(Contribution = sum(Contribution)), by = list(Sex,Country,Year,Cause,Age2)]
names(DT.Decomp.ex)     <- c("Sex","Country","Year","Cause","Age" ,"Contribution")
names(DT.Decomp.cv)     <- c("Sex","Country","Year","Cause","Age" ,"Contribution")
DT.compare.ex$Age2       <- (cut(DT.compare.ex$Age+1, breaks=c(seq(0,110,5),Inf),labels=Labels.age))
DT.compare.cv$Age2       <- (cut(DT.compare.cv$Age+1, breaks=c(seq(0,110,5),Inf),labels=Labels.age))
DT.compare.ex            <- DT.compare.ex[,list(Contribution = sum(Contribution)), by = list(Sex,Country,Year,Cause,Age2)]
DT.compare.cv            <- DT.compare.cv[,list(Contribution = sum(Contribution)), by = list(Sex,Country,Year,Cause,Age2)]
names(DT.compare.ex)     <- c("Sex","Country","Year","Cause","Age" ,"Contribution")
names(DT.compare.cv)     <- c("Sex","Country","Year","Cause","Age" ,"Contribution")
HMD <- get(load('Data/HMD_Data.RData'))
ASMR <- HMD[HMD$PopName %in% c('DNK','SWE','NOR') & HMD$Age <= 5,]
ASMR
ASMR <- HMD[HMD$PopName %in% c('DNK','SWE','NOR') & HMD$Age <= 5 & HMD$Year >= 1960,]
ASMR
save(Data,DT.Decomp.cv, DT.Decomp.ex,single.ex,single.cv,DT.compare.cv,DT.compare.ex,ASMR, file='R/DK_App/Results.RData')
library(shiny)
library(ggplot2)
library(data.table)
library(RColorBrewer)
setwd("C:/Users/jmaburto/Documents/GitHub/Lifespan-inequality-Denmark/R/DK_App")
rsconnect::setAccountInfo(name='jmaburto',
token='7310E08D0D081D3C3CABCAA90D18045E',
secret='Vzlie6RN39/THGhWKatGf/C68yZp+RENdTdOl/ey')
load('Results.RData')
runApp()
ASMR[ASMR$Year == years,]
years <- 2014
Data2       <- ASMR[ASMR$Year == years,]
Data2
Data2$mx    <- round(Data2$mx.4)
runApp()
Data2$Sex   <- as.factor(Data2$Sex)
levels(Data2$Sex)
runApp()
Data2$PopName   <- as.factor(Data2$PopName)
levels(Data2$PopName)
runApp()
